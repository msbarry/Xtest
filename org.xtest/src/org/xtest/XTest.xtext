// Michael Barry
grammar org.xtest.XTest with org.eclipse.xtext.xbase.Xbase

generate xTest "http://www.xtest.org/"
	
import "http://www.eclipse.org/xtext/xbase/Xbase"

// Top-level expression
Body returns XBlockExpression:
	{Body}
	(imports+=Import)*
	(expressions+=XExpressionInsideBlock ';'?)*;

Import: 'import' (static?='static')? importedNamespace = QualifiedNameWithWildcard;

QualifiedNameWithWildcard: QualifiedName '.*'?;

UniqueName:
	name=ID (identifier=XParenthesizedExpression)?
;

XTestSuite returns XExpression:
	{XTestSuite}
	'xsuite' name=UniqueName (expression=XBlockExpression);
XTestCase returns XExpression:
	{XTestCase}
	'xtest' name=UniqueName (expression=XBlockExpression);
	
XAssertExpression returns XExpression:
	{XAssertExpression}
	'assert' actual=XExpression (=>'throws' throws=JvmTypeReference)?
;

// Hook our newly defined expressions into XBase as new kinds of expressions
XPrimaryExpression returns XExpression:
	// Keep old expressions
	XConstructorCall |
	XBlockExpression |
	XSwitchExpression |
	XFeatureCall |
	XLiteral |
	XIfExpression |
	XForLoopExpression |
	XWhileExpression |
	XDoWhileExpression |
	XThrowExpression |
	XReturnExpression |
	XTryCatchFinallyExpression |
	XParenthesizedExpression |
	// Add new expressions
	XTestSuite |
	XTestCase |
	XAssertExpression;

