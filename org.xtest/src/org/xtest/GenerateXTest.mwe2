module org.xtest.GenerateXTest

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.ui.generator.*
import org.xtest.generator.*

var grammarURI = "classpath:/org/xtest/XTest.xtext"
var file.extensions = "xtest"
var projectName = "org.xtest"
var runtimeProject = "../${projectName}"

Workflow {
    bean = StandaloneSetup {
        scanClassPath = true
        platformUri = "${runtimeProject}/.."
        registerGeneratedEPackage = "org.eclipse.xtext.xbase.XbasePackage"
        registerGenModelFile = "platform:/resource/org.eclipse.xtext.xbase/model/Xbase.genmodel"
    }

    component = DirectoryCleaner {
        directory = "${runtimeProject}/src-gen"
    }

    component = DirectoryCleaner {
        directory = "${runtimeProject}.ui/src-gen"
    }
    

    component = Generator {
        pathRtProject = runtimeProject
        pathUiProject = "${runtimeProject}.ui"
        pathTestProject = "${runtimeProject}.test"
        projectNameRt = projectName
        projectNameUi = "${projectName}.ui"
        language = {
            uri = grammarURI
            fileExtensions = file.extensions

            fragment = grammarAccess.GrammarAccessFragment {}
            fragment = ecore.EcoreGeneratorFragment {}
            fragment = serializer.SerializerFragment {
            	generateStub = false
            }
            fragment = resourceFactory.ResourceFactoryFragment {
                fileExtensions = file.extensions
            }
            fragment = parser.antlr.XtextAntlrGeneratorFragment {}
            fragment = validation.JavaValidatorFragment {}
            fragment = scoping.ImportNamespacesScopingFragment {}
            fragment = exporting.QualifiedNamesFragment {}
            fragment = builder.BuilderIntegrationFragment {}
            fragment = generator.GeneratorFragment {
                generateMwe = false
                generateJavaMain = false
            }
            fragment = formatting.FormatterFragment {}
            fragment = labeling.LabelProviderFragment {}
            fragment = outline.OutlineTreeProviderFragment {}
            fragment = outline.QuickOutlineFragment {}
            fragment = quickfix.QuickfixProviderFragment {}
            fragment = contentassist.XtestContentAssistFragment {
            	dontOverrideMethods = true
            }
            fragment = parser.antlr.XtextAntlrUiGeneratorFragment {}
            fragment = junit.Junit4Fragment {}
            fragment = refactoring.RefactorElementNameFragment {}
            fragment = types.TypesGeneratorFragment {}
            fragment = xbase.XbaseGeneratorFragment {
            	generateXtendInferrer=false
            }
            fragment = templates.CodetemplatesGeneratorFragment {}
            fragment = compare.CompareFragment {
                 fileExtensions = file.extensions
            }

        }
    }
	component = org.eclipse.emf.mwe2.ecore.EcoreGenerator {
		srcPath = "platform:/resource/org.xtest/src"
		genModel = "platform:/resource/org.xtest/src-gen/org/xtest/XTest.genmodel"
	}
}
